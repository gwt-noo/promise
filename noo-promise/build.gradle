apply plugin: 'java'
apply plugin: 'gwt'
apply plugin: 'maven-publish'
apply plugin: 'com.jfrog.bintray'
apply plugin: 'maven'

version = '1.0'

sourceCompatibility = JavaVersion.VERSION_1_7
targetCompatibility = JavaVersion.VERSION_1_7

repositories {
    mavenCentral()
}

gwt {
    gwtVersion = project.ext.gwtVersion
    minHeapSize = "512M";
    maxHeapSize = "1024M";
}

jar {
    from sourceSets.main.allSource
}

dependencies {
    compile libraries.gwt_user
    testCompile libraries.gwt_jasmine
    testCompile libraries.junit

    gwtSdk libraries.gwt_user
    gwtSdk libraries.gwt_dev
}

task runTestServer(
        description: "Runs super dev mode with the test module for easy local testing",
        type: de.richsource.gradle.plugins.gwt.GwtSuperDev) {
    modules += 'noo.promisetest.PromiseTest'
    src += files(sourceSets.test.allJava.srcDirs)
    classpath  += sourceSets.test.runtimeClasspath
}

task compileTestModule(
        description: "Compiles the test module for static testing",
        type: de.richsource.gradle.plugins.gwt.GwtCompile) {
    modules += 'noo.promisetest.PromiseTest'
    src += files(sourceSets.test.allSource.srcDirs)
    classpath  += sourceSets.test.runtimeClasspath
    classpath  += sourceSets.test.compileClasspath
    war = file("$buildDir/testWar")
}

compileTestModule.dependsOn compileJava
compileTestModule.dependsOn compileTestJava
runTestServer.dependsOn compileJava
runTestServer.dependsOn compileTestJava


group = 'com.github.gwt-noo'
def versionBase = '0.1.1'
version = versionBase //+ (project.hasProperty('release') ? '' : '-test')

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }
}

uploadArchives {
    repositories {
        mavenDeployer {
            name = 'GWT noo repository'
            repository(id: 'gwt-noo', url: 'https://api.bintray.com/maven/gwt-noo/maven/noo-promise') {
                authentication(userName: bintrayUser, password: bintrayKey)
            }
        }
    }
}

bintray {
    user = bintrayUser
    key = bintrayKey
    publications = ['mavenJava'] // see publications closure
    publish = true
    pkg { //package will be created if does not exist
        repo = 'maven'
        userOrg = 'gwt-noo'
        name = 'noo-promise'
        desc = 'A promise library for GWT'
        licenses = ['Apache-2.0']
        labels = ['gwt', 'promise']
    }
}
bintrayUpload.dependsOn assemble